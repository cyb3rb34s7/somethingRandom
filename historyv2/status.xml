<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.assets.mapper.AssetMapper">

    <!-- Common WHERE clause for filtering -->
    <sql id="assetFilters">
        <where>
            upper(stathist.master_state) = 'POST'
            AND stathist.txn_occ_dt >= now() - interval '3 months'
            <if test="filterBody != null">
                <if test="filterBody.assetId != null and filterBody.assetId != ''">
                    AND stathist.asset_id LIKE '%' || #{filterBody.assetId} || '%'
                </if>
                <if test="filterBody.contentPartner != null and filterBody.contentPartner != ''">
                    AND vodmaster.content_partner LIKE '%' || #{filterBody.contentPartner} || '%'
                </if>
                <if test="filterBody.tiName != null and filterBody.tiName != ''">
                    AND vodmaster.vc_ti_nm LIKE '%' || #{filterBody.tiName} || '%'
                </if>
                <if test="filterBody.mediaTitle != null and filterBody.mediaTitle != ''">
                    AND vodmaster.main_title LIKE '%' || #{filterBody.mediaTitle} || '%'
                </if>
                <if test="filterBody.type != null and filterBody.type != ''">
                    AND vodmaster.type = #{filterBody.type}
                </if>
                <if test="filterBody.status != null and filterBody.status != ''">
                    AND stathist.new_status = #{filterBody.status}
                </if>
                <if test="filterBody.dateFrom != null">
                    AND stathist.txn_occ_dt >= #{filterBody.dateFrom}
                </if>
                <if test="filterBody.dateTo != null">
                    AND stathist.txn_occ_dt &lt;= #{filterBody.dateTo}
                </if>
                <if test="filterBody.updatedBy != null and filterBody.updatedBy != ''">
                    AND stathist.upd_by LIKE '%' || #{filterBody.updatedBy} || '%'
                </if>
            </if>
        </where>
    </sql>

    <!-- Get paginated list of assets with latest status -->
    <select id="getAssetsPaginated" resultMap="assetResultMap">
        WITH latest_asset_status AS (
            SELECT 
                stathist.asset_id,
                vodmaster.main_title,
                vodmaster.vc_ti_nm,
                vodmaster.content_partner,
                vodmaster.type,
                stathist.upd_by,
                stathist.txn_occ_dt,
                stathist.new_status,
                ROW_NUMBER() OVER (PARTITION BY stathist.asset_id ORDER BY stathist.txn_occ_dt DESC) AS rn
            FROM 
                cms_asset_state_h stathist
            JOIN 
                cms_std_vc_vod_content_h vodmaster ON stathist.asset_id = vodmaster.content_id
            <include refid="assetFilters" />
        )
        SELECT 
            asset_id AS assetId,
            main_title AS mediaTitle,
            vc_ti_nm AS tiName,
            content_partner AS contentPartner,
            type,
            upd_by AS lastUpdatedBy,
            txn_occ_dt AS lastChangeDateTime,
            new_status AS currentStatus
        FROM 
            latest_asset_status
        WHERE 
            rn = 1
        ORDER BY 
            <choose>
                <when test="filterBody != null and filterBody.sortField != null and filterBody.sortField != ''">
                    ${filterBody.sortField} <if test="filterBody.sortDir != null and filterBody.sortDir.toLowerCase() == 'desc'">DESC</if>
                    <if test="filterBody.sortDir == null or filterBody.sortDir.toLowerCase() != 'desc'">ASC</if>
                </when>
                <otherwise>
                    txn_occ_dt DESC
                </otherwise>
            </choose>
        LIMIT #{filterBody.pagination.limit} OFFSET #{filterBody.pagination.offset}
    </select>
    
    <!-- Get total count of distinct assets with filters -->
    <select id="getTotalAssetCount" resultType="integer">
        SELECT COUNT(DISTINCT stathist.asset_id) 
        FROM 
            cms_asset_state_h stathist
        JOIN 
            cms_std_vc_vod_content_h vodmaster ON stathist.asset_id = vodmaster.content_id
        <include refid="assetFilters" />
    </select>
    
    <!-- Simple query to get status history for an asset -->
    <select id="getAssetStatusHistoryById" resultMap="statusChangeResultMap">
        SELECT 
            txn_occ_dt AS changeDateTime,
            old_status AS oldStatus,
            new_status AS newStatus,
            upd_by AS updatedBy
        FROM 
            cms_asset_state_h
        WHERE 
            asset_id = #{assetId}
            AND upper(master_state) = 'POST'
            AND txn_occ_dt >= now() - interval '3 months'
        ORDER BY 
            txn_occ_dt DESC
    </select>
    
    <!-- Result Maps -->
    <resultMap id="assetResultMap" type="com.example.assets.model.AssetResponse">
        <id property="assetId" column="assetId" />
        <result property="mediaTitle" column="mediaTitle" />
        <result property="tiName" column="tiName" />
        <result property="contentPartner" column="contentPartner" />
        <result property="type" column="type" />
        <result property="lastUpdatedBy" column="lastUpdatedBy" />
        <result property="lastChangeDateTime" column="lastChangeDateTime" />
        <result property="currentStatus" column="currentStatus" />
    </resultMap>
    
    <resultMap id="statusChangeResultMap" type="com.example.assets.model.StatusChange">
        <result property="changeDateTime" column="changeDateTime" />
        <result property="oldStatus" column="oldStatus" />
        <result property="newStatus" column="newStatus" />
        <result property="updatedBy" column="updatedBy" />
    </resultMap>
</mapper>